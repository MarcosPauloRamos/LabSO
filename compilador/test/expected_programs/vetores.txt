********** Código intermediário **********

1: (function, valor, _, _)
2: (get_param, vector, _, _)
3: (get_param, index, _, _)
4: (get_param, a, _, _)
5: (vector_address, vector, index, t2)
6: (assign, t2, a, _)
7: (vector_value, vector, index, t3)
8: (return, t3, _, _)
9: (function, main, _, _)
10: (assign, a, 50, _)
11: (param_list, 1, _, _)
12: (param_list, 3, _, _)
13: (set_param, vet, _, _)
14: (set_param, 5, _, _)
15: (set_param, a, _, _)
16: (call, valor, 3, t4)
17: (set_param, t4, _, _)
18: (call, output, 1, t5)
19: (syscall, _, _, _)

********** Código objeto **********

valor:
    0:	addi	$sp, $sp, 5
    1:	sw	$a0, -2($sp)
    2:	sw	$a1, -1($sp)
    3:	sw	$a2, 0($sp)
    4:	lw	$s0, -2($sp)
    5:	lw	$s1, -1($sp)
    6:	add	$t0, $s0, $s1
    7:	lw	$s2, 0($sp)
    8:	sw	$s2, 0($t0)
    9:	add	$t1, $s0, $s1
    10:	lw	$t1, 0($t1)
    11:	mov	$v0, $t1
    12:	jr	$ra

main:
    13:	addi	$sp, $gp, 1
    14:	addi	$sp, $sp, 12
    15:	li	$t0, 50
    16:	sw	$t0, 0($sp)
    17:	la	$a0, 0($sp)
    18:	li	$a1, 5
    19:	lw	$s0, 0($sp)
    20:	mov	$a2, $s0
    21:	sw	$ra, -1($sp)
    22:	jal	valor
    23:	subi	$sp, $sp, 5
    24:	lw	$ra, -1($sp)
    25:	mov	$s0, $v0
    26:	mov	$a0, $s0
    27:	out	$a0, 14532976
    28:	subi	$sp, $sp, 12
    29:	syscall	, $k0

********** Código binário **********

disk[0] <= 32'b111101_00000000000000000000001110;		// Jump to Main
disk[1] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[2] <= 32'b010010_11110_00001_1111111111111110; 	// sw
disk[3] <= 32'b010010_11110_00010_1111111111111111; 	// sw
disk[4] <= 32'b010010_11110_00011_0000000000000000; 	// sw
disk[5] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[6] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[7] <= 32'b000000_00101_00110_01111_00000_000000; 	// add
disk[8] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[9] <= 32'b010010_01111_00111_0000000000000000; 	// sw
disk[10] <= 32'b000000_00101_00110_10000_00000_000000; 	// add
disk[11] <= 32'b001111_10000_10000_0000000000000000; 	// lw
disk[12] <= 32'b001110_10000_11000_0000000000000000; 	// mov
disk[13] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[14] <= 32'b000001_11101_11110_0000000000000001; 	// addi
disk[15] <= 32'b000001_11110_11110_0000000000001100; 	// addi
disk[16] <= 32'b010000_00000_01111_0000000000110010; 	// li
disk[17] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[18] <= 32'b010001_11110_00001_0000000000000000; 	// la
disk[19] <= 32'b010000_00000_00010_0000000000000101; 	// li
disk[20] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[21] <= 32'b001110_00101_00011_0000000000000000; 	// mov
disk[22] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[23] <= 32'b111110_00000000000000000000000001; 	// jal
disk[24] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[25] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[26] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[27] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[28] <= 32'b010100_00000_00001_1100000101110000; 	// out
disk[29] <= 32'b000010_11110_11110_0000000000001100; 	// subi
disk[30] <= 32'b111001_11001_00000_0000000000000000; 	// syscall

